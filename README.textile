h1. jQuery JSON-RPC Plugin

A JSON-RPC 2.0 implementation for jQuery.

h2. Usage

h3. Invocation

```javascript
$.jsonrpc([opt_opts]);
```

h3. Parameter detail

|_.opci√≥n|_.default|_.type|_.description|
|<code>id</code>|1|<code>number</code>|The request id.|
|<code>url</code>|null|<code>string</code>|A string containing the URL to which the request is sent.|
|<code>method</code>|""|<code>string</code>|A String containing the name of the method to be invoked.|
|<code>params</code>|<code>{}</code>|<code>object</code>|An object to pass as arguments to the method.|
|<code>success</code>|null|<code>function</code>|A function to be called if the request succeeds.|
|<code>fault</code>|null|<code>function</code>|A function to be called if the request succeeds (but with errors).|
|<code>error</code>|null|<code>function</code>|A function to be called if the request fails.|

h2. Examples

```javascript
// A RPC call with named parameters
$.jsonrpc({
  url: "/rpc",
  method: "createUser",
  params: {
    name: "John Smith",
    userId: 1000
  },
  success: function (response) {
    // pass
  },
  fault: function (response, errordata) {
    // pass
  },
  error: function (request, status, error) {
    // pass
  }
});
```

```javascript
// A Notification
$.jsonrpc({
  url: "/rpc",
  method: "notify",
  params: {
    action: "logout",
    userId: 1000
  }
});
```

```javascript
// A Notification using console to debug and with timeout set
$.jsonrpc({
  url: "/rpc"
  method: "notify",
  params: {
    action: "logout",
    userId: 1000
  },
  timeout: 500
});
```
